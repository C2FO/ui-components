!function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={exports:{},id:d,loaded:!1};return a[d].call(e.exports,e,e.exports,b),e.loaded=!0,e.exports}var c={};return b.m=a,b.c=c,b.p="",b(0)}([function(a,b,c){"use strict";c(1),angular.module("c2fo.ui",[c(1),c(2)])},function(a,b){"use strict";var c="c2fo.ui.core";angular.module(c,[]),a.exports=c},function(a,b,c){"use strict";var d="c2fo.ui.modules";angular.module(d,[c(3),c(4)]),a.exports=d},function(a,b){"use strict";var c="c2fo.ui.modules.checkboxFilterGroup";angular.module(c,[]).directive("c2foCheckboxFilterGroup",[function(){return{restrict:"E",scope:{label:"@",fields:"=",filter:"=",filterKey:"@",multicheck:"=",onUpdate:"&"},template:['<div class="c2fo-ui-checkbox-filter-group">','   <div class="heading">{{checkBoxFilterGroupCtrl.label}}</div>','   <div class="checkbox" ng-repeat="field in checkBoxFilterGroupCtrl.fields">',"       <label>",'           <input type="checkbox" ng-model="field.isChecked" ng-click="checkBoxFilterGroupCtrl.updateFilter($event)"/>',"           {{field.label}}","       </label>","   </div>","</div>"].join("").replace(/\s\s+/g,""),controller:"CheckboxFilterGroupController",controllerAs:"checkBoxFilterGroupCtrl",bindToController:!0}}]).controller("CheckboxFilterGroupController",["$timeout",function(a){function b(b){if(c.multicheck){var d=[];c.fields.forEach(function(a){a.isChecked===!0&&d.push(a.value)}),c.filter[c.filterKey]=d}else{var e=angular.element(b.target).scope().field,f=angular.copy(e.isChecked);c.fields.map(function(a){return a.isChecked=!1,a}),e.isChecked=f,c.filter[c.filterKey]=e.isChecked===!0?[e.value]:[]}a(function(){c.onUpdate()&&c.onUpdate()(c.filter)})}var c=this;c.updateFilter=b}]),a.exports=c},function(a,b){"use strict";var c="c2fo.ui.modules.pager";angular.module(c,[]).directive("c2foPager",[function(){return{restrict:"E",scope:{currentPage:"=",previousPage:"=",hasPreviousPage:"=",previousPageCount:"=",nextPage:"=",hasNextPage:"=",nextPageCount:"=",totalPages:"=",onPageChange:"&"},template:["<nav>",'   <ul class="pager">','       <li class="previous" ng-class="{\'disabled\': !pagerCtrl.hasPreviousPage}">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.previousPage)">','               <span aria-hidden="true">&larr;</span>',"               Previous","           </a>","       </li>",'       <li ng-repeat="pageNumber in pagerCtrl.range(pagerCtrl.previousPageCount, true) track by $index"','           ng-show="(pagerCtrl.previousPageCount > 0) && (pagerCtrl.currentPage - (pageNumber + 1)) > 0">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.currentPage - (pageNumber + 1))">',"               {{pagerCtrl.currentPage - (pageNumber + 1)}}","           </a>","       </li>",'       <li class="active">','           <a href="#" ng-click="pagerCtrl.currentPage">{{pagerCtrl.currentPage}}</a>',"       </li>",'       <li ng-repeat="pageNumber in pagerCtrl.range(pagerCtrl.nextPageCount) track by $index"','           ng-show="(pagerCtrl.nextPageCount > 0) && (pagerCtrl.currentPage + (pageNumber + 1)) < pagerCtrl.totalPages">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.currentPage + (pageNumber + 1))">',"               {{pagerCtrl.currentPage + (pageNumber + 1)}}","           </a>","       </li>",'           <li class="next" ng-class="{\'disabled\': !pagerCtrl.hasNextPage}">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.nextPage)">',"               Next",'               <span aria-hidden="true">&rarr;</span>',"           </a>","       </li>","   </ul>","</nav>"].join("").replace(/\s\s+/g,""),controller:"PagerController",controllerAs:"pagerCtrl",bindToController:!0}}]).controller("PagerController",[function(){function a(a){return a?void c.onPageChange()(a):!1}function b(a,b){for(var c=[],d=0;a>d;d++)c.push(d);return b&&c.reverse(),c}var c=this;c.handlePageChange=a,c.range=b}]),a.exports=c}]);
//# sourceMappingURL=c2fo-ui-components.min.js.map