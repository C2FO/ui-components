"use strict";function PagerController(){function a(a){return a?void c.onPageChange()(a):!1}function b(a,b){for(var c=[],d=0;a>d;d++)c.push(d);return b&&c.reverse(),c}var c=this;c.handlePageChange=a,c.range=b}function PagerDirective(){return{restrict:"E",scope:{currentPage:"=",previousPage:"=",hasPreviousPage:"=",previousPageCount:"=",nextPage:"=",hasNextPage:"=",nextPageCount:"=",totalPages:"=",onPageChange:"&"},template:["<nav>",'   <ul class="pager">','       <li class="previous" ng-class="{\'disabled\': !pagerCtrl.hasPreviousPage}">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.previousPage)">','               <span aria-hidden="true">&larr;</span>',"               Previous","           </a>","       </li>",'       <li ng-repeat="pageNumber in pagerCtrl.range(pagerCtrl.previousPageCount, true) track by $index"','           ng-show="(pagerCtrl.previousPageCount > 0) && (pagerCtrl.currentPage - (pageNumber + 1)) > 0">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.currentPage - (pageNumber + 1))">',"               {{pagerCtrl.currentPage - (pageNumber + 1)}}","           </a>","       </li>",'       <li class="active">','           <a href="#" ng-click="pagerCtrl.currentPage">{{pagerCtrl.currentPage}}</a>',"       </li>",'       <li ng-repeat="pageNumber in pagerCtrl.range(pagerCtrl.nextPageCount) track by $index"','           ng-show="(pagerCtrl.nextPageCount > 0) && (pagerCtrl.currentPage + (pageNumber + 1)) < pagerCtrl.totalPages">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.currentPage + (pageNumber + 1))">',"               {{pagerCtrl.currentPage + (pageNumber + 1)}}","           </a>","       </li>",'           <li class="next" ng-class="{\'disabled\': !pagerCtrl.hasNextPage}">','           <a href="#" ng-click="pagerCtrl.handlePageChange(pagerCtrl.nextPage)">',"               Next",'               <span aria-hidden="true">&rarr;</span>',"           </a>","       </li>","   </ul>","</nav>"].join("").replace(/\s\s+/g,""),controller:"PagerController",controllerAs:"pagerCtrl",bindToController:!0}}module.exports=PagerController,PagerController.$inject=[],describe("Pager Controller",function(){beforeEach(module("c2fo.ui.modules.pager"));var a,b;beforeEach(inject(function(c){var d=c;b={},a=d("PagerController",{$scope:b})})),describe("range()",function(){it("should create a range of iteratees",function(){expect(a.range(5)).toEqual([0,1,2,3,4])}),it("should create a range of iteratees in reverse",function(){expect(a.range(5,!0)).toEqual([4,3,2,1,0])})}),describe("handlePageChange()",function(){it("should return false on invalid page",function(){expect(a.handlePageChange(null)).toEqual(!1)}),it("should fire onPageChange() when successful",function(){a.onPageChange=function(){return function(a){expect(a).toEqual(45)}},a.handlePageChange(45)})})}),module.exports=PagerDirective,PagerDirective.$inject=[];
//# sourceMappingURL=pager.min.js.map